// ImpBuzz
PARAMETERS{
integer nref(Журнал)=0
}
CONNECT{
Source(DSN=In;UID=;PWD=)
Destination(DSN=BUZZ52;UID=craft;PWD=master)
}
TRANSFER{
Name(Отделения)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from depart order by ndprt)
Message()
Destination(process=REPLACE owner= table=depart)
}
TRANSFER{
Name(Фирмы)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from firm order by id_frm)
Message()
Destination(process=REPLACE owner= table=firm)
}
TRANSFER{
Name(Офисы)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from location order by code_loc)
Message()
Destination(process=REPLACE owner= table=location)
}
TRANSFER{
Name(Подразделения)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from subdiv order by subdiv)
Message()
Destination(process=REPLACE owner= table=subdiv)
}
TRANSFER{
Name(Склады)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from sklad order by sklad)
Message()
Destination(process=REPLACE owner= table=sklad)
}
TRANSFER{
Name(Валюты)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from currlist order by code_currency)
Message()
Destination(process=REPLACE owner= table=currency)
}
TRANSFER{
Name(Виды налогов)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from kindtax order by cod_tax)
Message()
Destination(process=REPLACE owner= table=kindtax)
}
TRANSFER{
Name(Категории)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from category order by code_ctg)
Message()
Destination(process=REPLACE owner= table=category)
}
TRANSFER{
Name(Профессии)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from prof order by code_prof)
Message()
Destination(process=REPLACE owner= table=prof)
}
TRANSFER{
Name(Должности)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from pos order by code_position)
Message()
Destination(process=REPLACE owner= table=pos)
}
TRANSFER{
Name(Виды оплат)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from paykind order by code_pkind)
Message()
Destination(process=REPLACE owner= table=paykind)
}
TRANSFER{
Name(Персонал)
Schema(COLUMNS)
ConvertText(UNCHANGED)
Source(select * from personal order by ndprt,code_pers)
Message()
Destination(process=REPLACE owner= table=personal
columns(K:ndprt(I)=$ndprt;K:code_pers(I)=$code_pers;id_frm(I)=$id_frm;
code_loc(I)=$code_loc;subdiv(I)=$subdiv;code_position(I)=$code_position;
code_prof(I)=$code_prof;code_ctg(I)=$code_ctg;code_pkind(I)=$code_pkind;
code_work(I)=$code_work;code_rate(I)=$code_rate;dis_pers(I)=$dis_pers;
fem_pers(I)=$fem_pers;code_boss(I)=$code_boss;tn_pers(VA,20)=$tn_pers;
login_pers(VA,30)=$login_pers;fam_pers(VA,20)=$fam_pers;
name_pers(VA,20)=$name_pers;sname_pers(VA,20)=$sname_pers;
nationality(VA,20)=$nationality;place_pers(VA,255)=$place_pers;
data_born(TS)=$data_born;data_post(TS)=$data_post;data_stage(TS)=$data_stage;
data_dis(TS)=$data_dis;nstage(I)=$nstage;st_pers(DB)=$st_pers;oklad(DB)=$oklad;
ndog_pers(VA,10)=$ndog_pers;wbook_ser(VA,10)=$wbook_ser;
wbook_num(VA,10)=$wbook_num;bank_card(VA,20)=$bank_card;education(I)=$education;
okpdtr(VA,10)=$okpdtr;spec_pers(VA,40)=$spec_pers;okso(VA,10)=$okso;
qualification(VA,40)=$qualification;diploma(VA,10)=$diploma;
datadip(TS)=$datadip;degree(VA,40)=$degree;isfamily(I)=$isfamily;
inn_pers(VA,20)=$inn_pers;nstrah(VA,20)=$nstrah;nmedstr(VA,20)=$nmedstr;
doc_pers(I)=$doc_pers;ser_pasp(VA,10)=$ser_pasp;nom_pasp(VA,10)=$nom_pasp;
vip_pasp(VA,80)=$vip_pasp;data_pasp(TS)=$data_pasp;prop_addr(VA,255)=$prop_addr;
home_addr(VA,255)=$home_addr;work_tel(VA,20)=$work_tel;
home_tel(VA,20)=$home_tel;cell_tel(VA,20)=$cell_tel;
email_pers(VA,80)=$email_pers;skype_pers(VA,30)=$skype_pers;
icq_pers(VA,30)=$icq_pers;group_war(VA,30)=$group_war;
kateg_war(VA,30)=$kateg_war;sost_war(VA,30)=$sost_war;
range_war(VA,30)=$range_war;spec_war(VA,30)=$spec_war;appl_war(I)=$appl_war;
doc_war(I)=$doc_war;docn_war(VA,10)=$docn_war;docs_war(VA,10)=$docs_war;
place_war(VA,100)=$place_war;srok_war(D)=$srok_war;psd(DB)=$psd;psnn(DB)=$psnn;
ppn(DB)=$ppn;prim_pers(VA,255)=$prim_pers;citizenship(I)=$citizenship;
disability(I)=$disability;dadocs(VA,10)=$dadocs;dadocn(VA,10)=$dadocn;
dadocd(TS)=$dadocd;num_flat(I)=$num_flat;s_total(DB)=$s_total;
s_heat(DB)=$s_heat;n_svid(VA,20)=$n_svid;data_svid(TS)=$data_svid;
privilege(DB)=$privilege;college(VA,80)=$college;
nmedstr_old(VA,20)=$nmedstr_old;idc_doc(I)=$idc_doc;idr_doc(I)=$idr_doc;
idd_doc(I)=$idd_doc;ids_doc(I)=$ids_doc;idl_doc(I)=$idl_doc;
zip_doc(VA,10)=$zip_doc;hnum_doc(VA,10)=$hnum_doc;bnum_doc(VA,10)=$bnum_doc;
fnum_doc(VA,10)=$fnum_doc;date_doc(D)=$date_doc;idc_fakt(I)=$idc_fakt;
idr_fakt(I)=$idr_fakt;idd_fakt(I)=$idd_fakt;ids_fakt(I)=$ids_fakt;
idl_fakt(I)=$idl_fakt;zip_fakt(VA,10)=$zip_fakt;hnum_fakt(VA,10)=$hnum_fakt;
bnum_fakt(VA,10)=$bnum_fakt;fnum_fakt(VA,10)=$fnum_fakt;uname(VA,20)=$uname;
umod(VA,20)=$umod;crdate(TS)=$crdate;modate(TS)=$modate;photo_pers(LVA)))
}
TRANSFER{
Name(Единицы измерения)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from unit order by code_unit)
Message()
Destination(process=REPLACE owner= table=unit)
}
TRANSFER{
Name(Страны)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from country order by code_country)
Message()
Destination(process=REPLACE owner= table=country)
}
TRANSFER{
Name(Регионы)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from region order by code_country,code_region)
Message()
Destination(process=REPLACE owner= table=region)
}
TRANSFER{
Name(Районы)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from district order by code_country,code_region,code_district)
Message()
Destination(process=REPLACE owner= table=district)
}
TRANSFER{
Name(Типы цены)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from tprice order by code_tprice)
Message()
Destination(process=REPLACE owner= table=tprice)
}
TRANSFER{
Name(Типы свойств товаров)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from tchar where typ_dwo=1 and num_dwo=510 order by typ_dwo,num_dwo,id_tchar)
Message()
Destination(process=REPLACE owner= table=tchar)
}
TRANSFER{
Name(Свойства групп)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from tgroup order by typ_dwo,num_dwo,id_tchar,ndprt,id_twg)
Message()
Destination(process=REPLACE owner= table=tgroup)
}
TRANSFER{
Name(Номенклатура товаров)
Schema(COLUMNS)
ConvertText(UNCHANGED)
Source(select ndprt,id_ware,id_parent,last_ware,flag_ware,flag_made,
comp_ware,code_unit,code_country,id_pro,id_ser,type_ts,dep_ts,num_ts,code_ware,
name_ware,name_ware2,code_gr,barcode,marka_ware,okdp_ware,post_ware,
gost_ware,acnt_ware,min_rest,weight,pack,cost_ware,count_ware,validity,
webexp,t_tax1,t_tax2,t_tax3,v_tax1,v_tax2,v_tax3,wdata,t_info, pict_ware 
from ware order by ndprt,id_ware)
Message()
Destination(process=REPLACE owner= table=ware
columns(K:ndprt(I)=$ndprt;K:id_ware(I)=$id_ware;id_parent(I)=$id_parent;
last_ware(I)=$last_ware;flag_ware(I)=$flag_ware;flag_made(I)=$flag_made;
comp_ware(I)=$comp_ware;code_unit(I)=$code_unit;code_country(I)=$code_country;
id_pro(I)=$id_pro;id_ser(I)=$id_ser;type_ts(I)=$type_ts;dep_ts(I)=$dep_ts;
num_ts(I)=$num_ts;code_ware(VA,30)=$code_ware;name_ware(VA,255)=$name_ware;
name_ware2(VA,255)=$name_ware2;code_gr(VA,255)=$code_gr;barcode(VA,30)=$barcode;
marka_ware(VA,40)=$marka_ware;okdp_ware(VA,20)=$okdp_ware;
post_ware(VA,30)=$post_ware;gost_ware(VA,40)=$gost_ware;
acnt_ware(VA,10)=$acnt_ware;min_rest(DB)=$min_rest;weight(DB)=$weight;
pack(DB)=$pack;cost_ware(DB)=$cost_ware;count_ware(DB)=$count_ware;
validity(I)=$validity;webexp(I)=$webexp;t_tax1(I)=$t_tax1;t_tax2(I)=$t_tax2;
t_tax3(I)=$t_tax3;v_tax1(DB)=$v_tax1;v_tax2(DB)=$v_tax2;v_tax3(DB)=$v_tax3;
wdata(TS)=$wdata;t_info(LVA)=$t_info;pict_ware(LVB)=$pict_ware))
}
TRANSFER{
Name(Доп.свойства номенклатуры)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from wdata order by ndprt,id_ware,id_wdat)
Message()
Destination(process=REPLACE owner= table=wdata)
}
TRANSFER{
Name(Единицы измерений товаров)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from wunit order by ndprt,id_ware,code_unit)
Message()
Destination(process=REPLACE owner= table=wunit)
}
TRANSFER{
Name(Цены товаров)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from wprice 
order by ndprt,id_ware,code_currency,code_tprice)
Message()
Destination(process=REPLACE owner= table=wprice)
}
TRANSFER{
Name(История цены товаров)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from whprice 
order by ndep,iware,code_tprice,code_currency,data_price)
Message()
Destination(process=REPLACE owner= table=whprice)
}
TRANSFER{
Name(Отрасли)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from branch order by code_branch)
Message()
Destination(process=REPLACE owner= table=branch)
}
TRANSFER{
Name(Оргформы)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from tplant order by t_plant)
Message()
Destination(process=REPLACE owner= table=tplant)
}
TRANSFER{
Name(Типы контрагентов)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from tclient order by t_client)
Message()
Destination(process=REPLACE owner= table=tclient)
}
TRANSFER{
Name(Контрагенты)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from client order by ndprt,numb_client)
Message()
Destination(process=REPLACE owner= table=client)
}
TRANSFER{
Name(Счета контрагентов)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from clbank order by ndprt,numb_client,acnt)
Message()
Destination(process=REPLACE owner= table=clbank
columns(note=<note0))
}
TRANSFER{
Name(Персоналии контрагентов)
Schema(COPY)
ConvertText(UNCHANGED)
Source(select * from pclient order by ndprt,numb_client,numb_person)
Message()
Destination(process=REPLACE owner= table=pclient)
}
TRANSFER{
Name(Документы)
Schema(COMPLEX)
ConvertText(UNCHANGED)
Source(select   *
from     sdoc
where    numref = :nref(i) 
order by date_sd,type_sd,ndprt,autokey_sd)
SubSQL(select   *
from     sdspc
where    numref = $numref(i) and
         nyear = $nyear(i) and
         type_sd = $type_sd(i) and
         ndprt = $ndprt(i) and
         autokey_sd = $autokey_sd(i)
order by npp_spc)
Message($date_sd  Накладная на отгрузку::  $ndprt / $autokey_sd)
Destination(process=REPLACE owner= table=sdoc
columns(T:sklad;T:code_currency;T:cur_code_currency;N:flag))
Detail(process=FULL owner= table=sdspc
condition(numref = $numref and nyear = $nyear and type_sd = $type_sd and
ndprt = $ndprt and autokey_sd = $autokey_sd))
}
