// Экспорт из центра
PARAMETERS{
date dat1(Дата с),date dat2(Дата по),integer nref(Журнал)
}
CONNECT{
Source(DSN=OraSrv;UID=compas;PWD=base)
Destination(DSN=Out;UID=;PWD=)
}
TRANSFER{
Name(Отделения)
Schema(COLUMNS)
Source(select * from depart order by ndprt)
Destination(process=CREATE table=depart
columns(K:ndprt(I)=$ndprt;namedprt(VA,40)=$namedprt))
}
TRANSFER{
Name(Склады)
Schema(COLUMNS)
Source(select * from sklad where sklad>0 order by sklad)
Destination(process=CREATE table=sklad
columns(K:sklad(I)=$sklad;ndprt(I)=$ndprt;name_skl(VA,80)=$name_skl))
}
TRANSFER{
Name(Валюты)
Schema(COLUMNS)
Source(select * from currency order by code_currency)
Destination(process=CREATE table=currlist
columns(K:code_currency(I)=$code_currency;iso_numb(I)=$iso_numb;
ratio(I)=$ratio;iso_name(VA,3)=$iso_name;
shortname_curr(VA,25)=$shortname_curr;namecurr(VA,50)=$namecurr;
ncountry(VA,50)=$ncountry))
}
TRANSFER{
Name(Единицы измерения)
Schema(COLUMNS)
Source(select * from unit order by code_unit)
Destination(process=CREATE table=unit
columns(K:code_unit(I)=$code_unit;unit(VA,10)=$unit;
name_unit(VA,80)=$name_unit))
}
TRANSFER{
Name(Страны)
Schema(COLUMNS)
Source(select * from country order by code_country)
Destination(process=CREATE table=country
columns(K:code_country(I)=$code_country;country(VA,50)=$country))
}
TRANSFER{
Name(Производители)
Schema(COLUMNS)
Source(select * from producer order by id_pro)
Destination(process=CREATE table=producer
columns(K:id_pro(I)=$id_pro;code_country(I)=$code_country;
name_pro(VA,80)=$name_pro;cmnt_pro(VA,80)=$cmnt_pro))
}
TRANSFER{
Name(Сертификаты)
Schema(COLUMNS)
Source(select * from sertificate order by id_ser)
Destination(process=CREATE table=sertificate
columns(K:id_ser(I)=$id_ser;num_ser(I)=$num_ser;reg_ser(VA,30)=$reg_ser;
data_ser(TS)=$data_ser;org_ser(VA,100)=$org_ser;name_ser(VA,100)=$name_ser;
prod_ser(VA,100)=$prod_ser))
}
TRANSFER{
Name(Виды налогов)
Schema(COLUMNS)
Source(select * from kindtax order by cod_tax)
Destination(process=CREATE table=kindtax
columns(K:cod_tax(I)=$cod_tax;cname_tax(VA,10)=$cname_tax;
name_tax(VA,10)=$name_tax;acnt_tax(VA,10)=$acnt_tax))
}
TRANSFER{
Name(Типы цены)
Schema(COLUMNS)
Source(select * from tprice order by code_tprice)
Destination(process=CREATE table=tprice
columns(K:code_tprice(I)=$code_tprice;tprice(VA,10)=$tprice;
name_tprice(VA,80)=$name_tprice))
}
TRANSFER{
Name(Типы упаковки)
Schema(COLUMNS)
Source(select * from tpack order by code_tpack)
Destination(process=CREATE table=tpack
columns(K:code_tpack(I)=$code_tpack;tpack(VA,10)=$tpack;
name_tpack(VA,80)=$name_tpack))
}
TRANSFER{
Name(Виды характеристик)
Schema(COLUMNS)
Source(select * from tchar order by code_tchar)
Destination(process=CREATE table=tchar
columns(K:code_tchar(I)=$code_tchar;tchar(VA,10)=$tchar;
name_tchar(VA,80)=$name_tchar))
}
TRANSFER{
Name(Товары)
Schema(COLUMNS)
Source(select ndprt,id_ware,id_parent,last_ware,flag_ware,flag_made,
comp_ware,code_unit,code_country,id_pro,id_ser,name_ware,name_ware2,
code_ware,code_gr,barcode,marka_ware,okdp_ware,post_ware,gost_ware,
acnt_ware,weight,pack,cost_ware,count_ware,t_tax1,t_tax2,t_tax3,
v_tax1,v_tax2,v_tax3,wdata 
from ware order by ndprt,id_ware)
Message()
Destination(process=CREATE table=ware
columns(K:ndprt(I)=$ndprt;K:id_ware(I)=$id_ware;id_parent(I)=$id_parent;
last_ware(I)=$last_ware;flag_ware(I)=$flag_ware;flag_made(I)=$flag_made;
comp_ware(I)=$comp_ware;code_unit(I)=$code_unit;code_country(I)=$code_country;
id_pro(I)=$id_pro;id_ser(I)=$id_ser;name_ware(VA,80)=$name_ware;
name_ware2(VA,80)=$name_ware2;code_ware(VA,30)=$code_ware;
code_gr(VA,255)=$code_gr;barcode(VA,30)=$barcode;marka_ware(VA,40)=$marka_ware;
okdp_ware(VA,20)=$okdp_ware;post_ware(VA,30)=$post_ware;gost_ware(VA,30)=$gost_ware;
acnt_ware(VA,10)=$acnt_ware;weight(DB)=$weight;pack(DB)=$pack;cost_ware(DB)=$cost_ware;
count_ware(DB)=$count_ware;t_tax1(I)=$t_tax1;t_tax2(I)=$t_tax2;t_tax3(I)=$t_tax3;
v_tax1(DB)=$v_tax1;v_tax2(DB)=$v_tax2;v_tax3(DB)=$v_tax3;wdata(TS)=$wdata;t_info(LVA)))
}
TRANSFER{
Name(Цены товаров)
Schema(COLUMNS)
Source(select * from wprice 
order by ndprt,id_ware,code_currency,code_tprice)
Message()
Destination(process=CREATE table=wprice
columns(K:ndprt(I)=$ndprt;K:id_ware(I)=$id_ware;K:code_tprice(I)=$code_tprice;
K:code_currency(I)=$code_currency;price(DB)=$price;dt_price(TS)=$dt_price))
}
TRANSFER{
Name(История цены товаров)
Schema(COLUMNS)
Source(select * from whprice where data_price between :dat1 and :dat2)
Destination(process=CREATE table=whprice
columns(K:ndep(I)=$ndep;K:iware(I)=$iware;K:code_tprice(I)=$code_tprice;
K:code_currency(I)=$code_currency;K:data_price(TS)=$data_price;
priced(DB)=$priced))
}
TRANSFER{
Name(Остатки партий товаров)
Schema(COLUMNS)
Source(select card_spc.* from card_spc, sklad where 
card_spc.sklad = sklad.sklad and sklad.ndprt<>0 and in_rest_card>0)
Destination(process=CREATE table=wprest
columns(K:nskl(I)=$sklad;K:idw(I)=$id_ware;K:nwr(I)=$npp_card;
qrw(DB)=$in_rest_card;prw(DB)=$price_card;pcw(DB)=$cprice_card;
tx1(DB)=$vtax1;tx2(DB)=$vtax2;tx3(DB)=$vtax3))
}
TRANSFER{
Name(Упаковки товаров)
Schema(COLUMNS)
Source(select * from wpack order by code_tpack)
Destination(process=CREATE table=wpack
columns(K:ndprt(I)=$ndprt;K:id_ware(I)=$id_ware;K:code_tpack(I)=$code_tpack;
code_unit(I)=$code_unit;uni_code_unit(I)=$uni_code_unit;pkol(DB)=$pkol;
netto(DB)=$netto;brutto(DB)=$brutto;length(DB)=$length;height(DB)=$height;
width(DB)=$width))
}
TRANSFER{
Name(Характеристики товаров)
Schema(COLUMNS)
Source(select * from wchar order by ndprt,id_ware,code_tchar)
Destination(process=CREATE table=wchar
columns(K:ndprt(I)=$ndprt;K:id_ware(I)=$id_ware;K:code_tchar(I)=$code_tchar;
code_unit(I)=$code_unit;val_char(DB)=$val_char))
}
TRANSFER{
Name(Единицы измерений товаров)
Schema(COLUMNS)
Source(select * from wunit order by ndprt,id_ware,code_unit)
Destination(process=CREATE table=wunit
columns(K:ndprt(I)=$ndprt;K:id_ware(I)=$id_ware;K:code_unit(I)=$code_unit;
t_calc(I)=$t_calc;k_wunit(DB)=k_wunit))
}
TRANSFER{
Name(Отрасли)
Schema(COLUMNS)
Source(select * from branch order by code_branch)
Destination(process=CREATE table=branch
columns(K:code_branch(I)=$code_branch;name_branch(VA,80)=$name_branch))
}
TRANSFER{
Name(Типы клиентов)
Schema(COLUMNS)
Source(select * from tclient order by t_client)
Destination(process=CREATE table=tclient
columns(K:t_client(I)=$t_client;typeclient(VA,20)=$typeclient))
}
TRANSFER{
Name(Города)
Schema(COLUMNS)
Source(select * from town order by code_town)
Destination(process=CREATE table=town
columns(K:code_town(I)=$code_town;code_country(I)=$code_country;
rgn(I)=$rgn;town(VA,30)=$town))
}
TRANSFER{
Name(Оргформы клиентов)
Schema(COLUMNS)
Source(select * from tplant order by t_plant)
Destination(process=CREATE table=tplant
columns(K:t_plant(I)=$t_plant;typeplant(VA,20)=$typeplant))
}
TRANSFER{
Name(Должности)
Schema(COLUMNS)
Source(select * from pos order by code_position)
Destination(process=CREATE table=pos
columns(K:code_position(I)=$code_position;position(VA,40)=$position;norder(I)=$norder))
}
TRANSFER{
Name(Клиенты)
Schema(COLUMNS)
Source(select * from client order by ndprt,numb_client)
Destination(process=CREATE table=client
columns(K:ndprt(I)=$ndprt;K:numb_client(I)=$numb_client;
prnt_client(I)=$prnt_client;last_client(I)=$last_client;
t_plant(I)=$t_plant;t_client(I)=$t_client;code_branch(I)=$code_branch;
code_town(I)=$code_town;code_sector(I)=$code_sector;rgn(I)=$rgn;
code_country(I)=$code_country;per_ndprt(I)=$per_ndprt;
code_pers(I)=$code_pers;fhide(I)=$fhide;fbad(I)=$fbad;
count_client(DB)=$count_client;disc_client(DB)=$disc_client;
name_client(VA,80)=$name_client;addr_client(VA,80)=$addr_client;
note1(VA,80)=$note1;note2(VA,80)=$note2;inn_client(VA,15)=$inn_client;
okpo_client(VA,10)=$okpo_client;okonh_client(VA,10)=$okonh_client;
tel_client(VA,20)=$tel_client;fax_client(VA,20)=$fax_client))
}
TRANSFER{
Name(Банки клиентов)
Schema(COLUMNS)
Source(select * from clbank order by ndprt,numb_client,acnt)
Destination(process=CREATE table=clbank
columns(K:ndprt(I)=$ndprt;K:numb_client(I)=$numb_client;
K:acnt(VA,20)=$acnt;bik_bank(VA,9)=$bik_bank;corr_account(VA,20)=$corr_account;
ku_bank(VA,5)=$ku_bank;name_bank(VA,80)=$name_bank;note0(VA,80)=<note;
addr_bank(VA,80)=$addr_bank))
}
TRANSFER{
Name(Персоналии клиентов)
Schema(COLUMNS)
Source(select * from pclient order by ndprt,numb_client,numb_person)
Destination(process=CREATE table=pclient
columns(K:ndprt(I)=$ndprt;K:numb_client(I)=$numb_client;
K:numb_person(I)=$numb_person;code_position(I)=$code_position;
fiof(VA,80)=$fiof;phone1(VA,20)=$phone1;phone2(VA,20)=$phone2;
fax1(VA,20)=$fax1;fax2(VA,20)=$fax2;homeaddress(VA,80)=$homeaddress;
pnote1(VA,80)=$pnote1;pnote2(VA,80)=$pnote2))
}
TRANSFER{
Name(Межскладские накладные)
Schema(COLUMNS)
Source(select   * 
from     sdoc 
where    type_sd = 501 and numref = :nref and 
         date_sd between :dat1 and :dat2 and flag > 0 
order by year,ndprt,autokey_sd)
Destination(process=CREATE table=sdoc
columns(K:numref(I)=$numref;K:year(I)=$year;K:ndprt(I)=$ndprt;
K:type_sd(I)=$type_sd;K:autokey_sd(I)=$autokey_sd;
sdo_numref(I)=$sdo_numref;sdo_year(I)=$sdo_year;sdo_ndprt(I)=$sdo_ndprt;
sdo_type_sd(I)=$sdo_type_sd;sdo_autokey_sd(I)=$sdo_autokey_sd;
sklad(I)=$sklad;skl_sklad(I)=$skl_sklad;kind_pay(I)=$kind_pay;
n_sobj(I)=$n_sobj;code_trans(I)=$code_trans;
cli1_ndprt(I)=$cli1_ndprt;cli1_numb_client(I)=$cli1_numb_client;
cli2_ndprt(I)=$cli2_ndprt;cli2_numb_client(I)=$cli2_numb_client;
cli3_ndprt(I)=$cli3_ndprt;cli3_numb_client(I)=$cli3_numb_client;
cli4_ndprt(I)=$cli4_ndprt;cli4_numb_client(I)=$cli4_numb_client;
per_ndprt(I)=$per_ndprt;code_pers(I)=$code_pers;flag(I)=$flag;
sign_sd(I)=$sign_sd;fdel(I)=$fdel;isp1(I)=$isp1;isp2(I)=$isp2;isp3(I)=$isp3;
cur_code_currency(I)=$cur_code_currency;code_currency(I)=$code_currency;
typ_rate(I)=$typ_rate;rate_sd(DB)=$rate_sd;sumc_sd(DB)=$sumc_sd;
sumcur_sd(DB)=$sumcur_sd;sum_sd(DB)=$sum_sd;sumf_sd(DB)=$sumf_sd;
sumskl_sd(DB)=$sumskl_sd;sum_link_sd(DB)=$sum_link_sd;
count_sd(DB)=$count_sd;discont_sd(DB)=$discont_sd;
tf1(DB)=$tf1;tf2(DB)=$tf2;tf3(DB)=$tf3;tf4(DB)=$tf4;tf5(DB)=$tf5;
date_sd(TS)=$date_sd;save_sd(TS)=$save_sd;date_end_sd(TS)=$date_end_sd;
date_link_sd(TS)=$date_link_sd;postav_sd(TS)=$postav_sd;
reserv_sd(TS)=$reserv_sd;num_sd(VA,20)=$num_sd;zak_sd(VA,20)=$zak_sd;
trnum_sd(VA,20)=$trnum_sd;file_sd(VA,80)=$file_sd;add_doc_sd(VA,80)=$add_doc_sd;
prim_sd(VA,80)=$prim_sd;comment_sd(VA,80)=$comment_sd;
bik1(VA,10)=$bik1;acnt1(VA,20)=$acnt1;cacnt1(VA,20)=$cacnt1;
bik2(VA,10)=$bik2;acnt2(VA,20)=$acnt2;cacnt2(VA,20)=$cacnt2;
uname_sd(VA,30)=$uname_sd;umod_sd(VA,30)=$umod_sd))
}
TRANSFER{
Name(Спецификации межскл.накл.)
Schema(COLUMNS)
Source(select   sdspc.* 
from     sdoc, sdspc 
where    sdoc.numref = sdspc.numref and 
         sdoc.year = sdspc.year and 
         sdoc.type_sd = sdspc.type_sd and 
         sdoc.ndprt = sdspc.ndprt and 
         sdoc.autokey_sd = sdspc.autokey_sd and 
         sdoc.type_sd = 501 and sdoc.numref = :nref and 
         sdoc.date_sd between :dat1 and :dat2 and sdoc.flag > 0 
order by sdspc.year,sdspc.ndprt,sdspc.autokey_sd,sdspc.npp_spc)
Destination(process=CREATE table=sdspc
columns(K:numref(I)=$numref;K:year(I)=$year;K:ndprt(I)=$ndprt;
K:type_sd(I)=$type_sd;K:autokey_sd(I)=$autokey_sd;K:npp_spc(I)=$npp_spc;
ngr_spc(I)=$ngr_spc;ncw_spc(I)=$ncw_spc;war_ndprt(I)=$war_ndprt;
id_ware(I)=$id_ware;sklad(I)=$sklad;stel(I)=$stel;sot(I)=$sot;
code_unit(I)=$code_unit;q_spc(DB)=$q_spc;qf_spc(DB)=$qf_spc;
qr_spc(DB)=$qr_spc;qskl_spc(DB)=$qskl_spc;qm_spc(DB)=$qm_spc;
qe_spc(DB)=$qe_spc;typcd_spc(I)=$typcd_spc;count_spc(DB)=$count_spc;
disc_spc(DB)=$disc_spc;price_spc(DB)=$price_spc;pricef_spc(DB)=$pricef_spc;
pricec_spc(DB)=$pricec_spc;pricecf_spc(DB)=$pricecf_spc;
sum_spc(DB)=$sum_spc;sumc_spc(DB)=$sumc_spc;delta_spc(DB)=$delta_spc;
type_tax1(I)=$type_tax1;type_tax2(I)=$type_tax2;type_tax3(I)=$type_tax3;
prc_tax1(DB)=<proc_tax1;prc_tax2(DB)=<proc_tax2;prc_tax3(DB)=<proc_tax3;
sum_tax1(DB)=$sum_tax1;sum_tax2(DB)=$sum_tax2;sum_tax3(DB)=$sum_tax3;
data_spc(TS)=$data_spc;post_spc(VA,30)=$post_spc))
}
TRANSFER{
Name(Акты переоценки)
Schema(COLUMNS)
Source(select   * 
from     sdoc 
where    type_sd = 509 and numref = :nref and 
         date_sd between :dat1 and :dat2 and flag > 0 
order by year,ndprt,autokey_sd)
Destination(process=ADD table=sdoc
columns(K:numref(I)=$numref;K:year(I)=$year;K:ndprt(I)=$ndprt;
K:type_sd(I)=$type_sd;K:autokey_sd(I)=$autokey_sd;
sdo_numref(I)=$sdo_numref;sdo_year(I)=$sdo_year;sdo_ndprt(I)=$sdo_ndprt;
sdo_type_sd(I)=$sdo_type_sd;sdo_autokey_sd(I)=$sdo_autokey_sd;
sklad(I)=$sklad;skl_sklad(I)=$skl_sklad;kind_pay(I)=$kind_pay;
n_sobj(I)=$n_sobj;code_trans(I)=$code_trans;
cli1_ndprt(I)=$cli1_ndprt;cli1_numb_client(I)=$cli1_numb_client;
cli2_ndprt(I)=$cli2_ndprt;cli2_numb_client(I)=$cli2_numb_client;
cli3_ndprt(I)=$cli3_ndprt;cli3_numb_client(I)=$cli3_numb_client;
cli4_ndprt(I)=$cli4_ndprt;cli4_numb_client(I)=$cli4_numb_client;
per_ndprt(I)=$per_ndprt;code_pers(I)=$code_pers;flag(I)=$flag;
sign_sd(I)=$sign_sd;fdel(I)=$fdel;isp1(I)=$isp1;isp2(I)=$isp2;isp3(I)=$isp3;
cur_code_currency(I)=$cur_code_currency;code_currency(I)=$code_currency;
typ_rate(I)=$typ_rate;rate_sd(DB)=$rate_sd;sumc_sd(DB)=$sumc_sd;
sumcur_sd(DB)=$sumcur_sd;sum_sd(DB)=$sum_sd;sumf_sd(DB)=$sumf_sd;
sumskl_sd(DB)=$sumskl_sd;sum_link_sd(DB)=$sum_link_sd;
count_sd(DB)=$count_sd;discont_sd(DB)=$discont_sd;
tf1(DB)=$tf1;tf2(DB)=$tf2;tf3(DB)=$tf3;tf4(DB)=$tf4;tf5(DB)=$tf5;
date_sd(TS)=$date_sd;save_sd(TS)=$save_sd;date_end_sd(TS)=$date_end_sd;
date_link_sd(TS)=$date_link_sd;postav_sd(TS)=$postav_sd;
reserv_sd(TS)=$reserv_sd;num_sd(VA,20)=$num_sd;zak_sd(VA,20)=$zak_sd;
trnum_sd(VA,20)=$trnum_sd;file_sd(VA,80)=$file_sd;add_doc_sd(VA,80)=$add_doc_sd;
prim_sd(VA,80)=$prim_sd;comment_sd(VA,80)=$comment_sd;
bik1(VA,10)=$bik1;acnt1(VA,20)=$acnt1;cacnt1(VA,20)=$cacnt1;
bik2(VA,10)=$bik2;acnt2(VA,20)=$acnt2;cacnt2(VA,20)=$cacnt2;
uname_sd(VA,30)=$uname_sd;umod_sd(VA,30)=$umod_sd))
TabCommands(OnStart(delete from sdoc where type_sd = 509))
}
TRANSFER{
Name(Спецификации актов переоценки)
Schema(COLUMNS)
Source(
select   sdspc.* 
from     sdoc, sdspc 
where    sdoc.numref = sdspc.numref and  
         sdoc.year = sdspc.year and  
         sdoc.type_sd = sdspc.type_sd and  
         sdoc.ndprt = sdspc.ndprt and  
         sdoc.autokey_sd = sdspc.autokey_sd and 
         sdoc.type_sd = 509 and sdoc.numref = :nref and 
         sdoc.date_sd between :dat1 and :dat2 and sdoc.flag > 0 
order by sdspc.year,sdspc.ndprt,sdspc.autokey_sd,sdspc.npp_spc)
Destination(process=ADD table=sdspc
columns(K:numref(I)=$numref;K:year(I)=$year;K:ndprt(I)=$ndprt;
K:type_sd(I)=$type_sd;K:autokey_sd(I)=$autokey_sd;K:npp_spc(I)=$npp_spc;
ngr_spc(I)=$ngr_spc;ncw_spc(I)=$ncw_spc;war_ndprt(I)=$war_ndprt;
id_ware(I)=$id_ware;sklad(I)=$sklad;stel(I)=$stel;sot(I)=$sot;
code_unit(I)=$code_unit;q_spc(DB)=$q_spc;qf_spc(DB)=$qf_spc;
qr_spc(DB)=$qr_spc;qskl_spc(DB)=$qskl_spc;qm_spc(DB)=$qm_spc;
qe_spc(DB)=$qe_spc;typcd_spc(I)=$typcd_spc;count_spc(DB)=$count_spc;
disc_spc(DB)=$disc_spc;price_spc(DB)=$price_spc;pricef_spc(DB)=$pricef_spc;
pricec_spc(DB)=$pricec_spc;pricecf_spc(DB)=$pricecf_spc;
sum_spc(DB)=$sum_spc;sumc_spc(DB)=$sumc_spc;delta_spc(DB)=$delta_spc;
type_tax1(I)=$type_tax1;type_tax2(I)=$type_tax2;type_tax3(I)=$type_tax3;
prc_tax1(DB)=<proc_tax1;prc_tax2(DB)=<proc_tax2;prc_tax3(DB)=<proc_tax3;
sum_tax1(DB)=$sum_tax1;sum_tax2(DB)=$sum_tax2;sum_tax3(DB)=$sum_tax3;
data_spc(TS)=$data_spc;post_spc(VA,30)=$post_spc))
TabCommands(OnStart(delete from sdspc where type_sd = 509))
}